{"version":3,"file":"commonHelpers2.js","sources":["../src/js/shop-refs.js","../src/js/shop-icons-path.js","../src/js/shopping-list.js"],"sourcesContent":["export default function () {\n    return {\n        // Shopping list\n    divEl: document.querySelector('.filled-basket'),\n    addBtnEL: document.querySelector('.shop_card-btn'),\n       // Paginations\n    }\n}","export default function () {\n    return {\n      // Online stores icons\n    \n      bookShopIconPath: new URL('../img/modal/book.png', import.meta.url).href,\n  \n      amazonIconPath: new URL('../img/modal/amazon.png', import.meta.url).href,\n  \n       // Empty list image\n      emptyListImage: new URL('../img/shopping/books-desk@1x.png', import.meta.url).href,\n  \n      // SVG\n      svgTrashIcon: new URL('../img/icons.svg', import.meta.url),\n    };\n  }","\nimport icons from \"/img/icons.svg\"\nimport getRefs from './shop-refs.js';\nimport getShopIconsPaths from './shop-icons-path.js';\n\n\nconst SHOPPING_LIST_STORAGE_KEY = 'books';\nlet storedBooksArray = JSON.parse(localStorage.getItem(SHOPPING_LIST_STORAGE_KEY)) || []\nconst blankBasket = document.querySelector('.blank-basket')\n\n// Getting references to DOM elements\nconst { divEl } = getRefs();\n\n// Getting paths for shop icons\nconst { bookShopIconPath, amazonIconPath } = getShopIconsPaths();\n\n// Pagination variables\nconst pageSize = 3;\nlet currentPage = parseInt(localStorage.getItem('currentPage')) || 1;\nlet startIndex = (currentPage - 1) * pageSize;\nlet endIndex = startIndex + pageSize;\nlet itemsOnPage = storedBooksArray.slice(startIndex, endIndex);\n\n// Function to render the markup for the shopping list\nfunction renderMarkUp(storageArr) {\n    divEl.innerHTML = storageArr\n        .map(\n            ({\n                id,\n                title,\n                author,\n                description,\n                list_name,\n                book_image,\n                amazon_product_url,\n            }) => {\n                return `\n                    <article class=\"shop_card\">\n                        <div class=\"card-img\">\n                            <img class=\"shop__card-img\" src=\"${book_image}\" alt=\"${title}\" />\n                        </div>\n\n                        <div class=\"card-title\">\n                            <h3 class=\"shop__book-title\">${title}</h3>\n                            <p class=\"shop__book-category\">${list_name}</p>\n                        </div>\n\n                        <div class=\"card-description\">\n                            <p class=\"shop__book-description\">${description}</p>\n                        </div>\n\n                        <div class=\"card-author\">\n                            <p class=\"shop__book-author\">${author}</p>\n                        </div>\n\n                        <div class=\"card-shoplist\">\n                            <ul class=\"shop__book-shoplist\">\n                                <li class=\"store\">\n                                    <a href=\"${amazon_product_url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" aria-label=\"Amazon link\">\n                                        <img class=\"amazon\" src=\"${amazonIconPath}\" alt=\"Amazon link\" alt=\"Amazon live page\"/>\n                                    </a>\n                                </li>\n                                <li class=\"store\">\n                                    <a href=\"https://www.bookshop.org\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" aria-label=\"BookShop link\">\n                                        <img class=\"book-shop\" src=\"${bookShopIconPath}\" alt=\"BookShop link\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        <button class=\"delete-btn\" type=\"button\" data-book-id=\"${id}\" aria-label=\"Remove book from shopping list\">\n                            <svg class=\"trash-icon\" data-book-id=\"${id}\" width=\"18\" height=\"18\">\n                                <use class=\"t-ico\" data-book-id=\"${id}\" href=\"${icons}#trash-icon\"></use>\n                            </svg>\n                        </button>\n                    </article>\n                `;\n            }\n        )\n        .join('');\n}\n\n// Function to check if the shopping list is empty\nfunction isEmpty() {\n    if (!storedBooksArray.length) {\n        divEl.innerHTML = '';\n        blankBasket.classList.remove('display-none');\n    } else {\n        blankBasket.classList.add('display-none');\n        updateItemsOnPage();\n    }\n}\n\n// Initial check for empty shopping list\nisEmpty();\n\n// Event handler for click events on the shopping list\nfunction onDivElClick(event) {\n    if (\n        event.target.closest('.delete-btn') ||\n        event.target.closest('.trash-icon') ||\n        event.target.closest('.t-ico')\n    ) {\n        // Remove the book from the shopping list\n        storedBooksArray = storedBooksArray.filter(\n            (book) => book.id != event.target.getAttribute('data-book-id')\n        );\n        // Update the local storage\n        localStorage.setItem('books', JSON.stringify(storedBooksArray));\n        // Check if the shopping list is empty\n        isEmpty();\n        // Check if the current page is greater than the total pages\n        const totalPages = Math.ceil(storedBooksArray.length / pageSize);\n        if (currentPage > totalPages) {\n            currentPage = totalPages;\n            localStorage.setItem('currentPage', currentPage);\n        }\n\n        updateItemsOnPage();\n\n        updatePagination();\n    }\n}\n\n// Add event listener to the shopping list container\ndivEl.addEventListener('click', onDivElClick);\n\n// Function to update the items displayed on the current page\nfunction updateItemsOnPage() {\n    startIndex = (currentPage - 1) * pageSize;\n    endIndex = startIndex + pageSize;\n    itemsOnPage = storedBooksArray.slice(startIndex, endIndex);\n    renderMarkUp(itemsOnPage);\n}\n\n// P A G I N A T I O N\n\nconst startButton = document.querySelector('[name=\"startButton\"]');\nconst previousButton = document.querySelector('[name=\"previousButton\"]');\nconst nextButton = document.querySelector('[name=\"nextButton\"]');\nconst endButton = document.querySelector('[name=\"endButton\"]');\nconst paginationPagesStart = document.querySelector('.pagination_pages_start');\nconst paginationArrow = document.querySelector('.pagination_arrow');\n\n// Function to jump to the last page\nfunction jumpToLastPage() {\n    currentPage = Math.ceil(storedBooksArray.length / pageSize);\n    updateItemsOnPage();\n    updatePagination();\n}\n\n// Function to jump to the first page\nfunction jumpToFirstPage() {\n    currentPage = 1;\n    updateItemsOnPage();\n    updatePagination();\n}\n\n// Function to go to the previous page\nfunction goToPreviousPage() {\n    if (currentPage > 1) {\n        currentPage--;\n        updateItemsOnPage();\n        updatePagination();\n    }\n}\n\n// Function to go to the next page\nfunction goToNextPage() {\n    const totalPages = Math.ceil(storedBooksArray.length / pageSize);\n    if (currentPage < totalPages) {\n        currentPage++;\n        updateItemsOnPage();\n        updatePagination();\n    }\n}\n\nfunction updatePagination() {\n    const totalPages = Math.ceil(storedBooksArray.length / pageSize);\n    let paginationHTML = '';\n\n    for (let i = 1; i <= totalPages; i++) {\n        paginationHTML += `<button class=\"pagination-button\" data-page=\"${i}\">${i}</button>`;\n    }\n\n    paginationPagesStart.innerHTML = paginationHTML;\n\n    const paginationButtons = document.querySelectorAll('.pagination-button');\n    paginationButtons.forEach((button) => {\n        button.addEventListener('click', function () {\n            currentPage = parseInt(this.dataset.page);\n            updateItemsOnPage();\n            updatePagination();\n        });\n\n        // Add class 'active' to the current page button\n        if (button.dataset.page == currentPage) {\n            button.classList.add('active');\n        } else {\n            button.classList.remove('active');\n        }\n    });\n\n    if (storedBooksArray.length > pageSize) {\n        paginationArrow.style.display = 'flex';\n    } else {\n        paginationArrow.style.display = 'none';\n    }\n}\n\n// Add event listeners to the pagination buttons\nstartButton.addEventListener('click', jumpToFirstPage);\npreviousButton.addEventListener('click', goToPreviousPage);\nnextButton.addEventListener('click', goToNextPage);\nendButton.addEventListener('click', jumpToLastPage);\n\nupdatePagination();\n\n// Save the current page to localStorage before the page is unloaded\nwindow.addEventListener('beforeunload', function () {\n    localStorage.setItem('currentPage', currentPage);\n});\n\n\n"],"names":["getRefs","getShopIconsPaths","SHOPPING_LIST_STORAGE_KEY","storedBooksArray","blankBasket","divEl","bookShopIconPath","amazonIconPath","pageSize","currentPage","startIndex","endIndex","itemsOnPage","renderMarkUp","storageArr","id","title","author","description","list_name","book_image","amazon_product_url","icons","isEmpty","updateItemsOnPage","onDivElClick","event","book","totalPages","updatePagination","startButton","previousButton","nextButton","endButton","paginationPagesStart","paginationArrow","jumpToLastPage","jumpToFirstPage","goToPreviousPage","goToNextPage","paginationHTML","i","button"],"mappings":"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"}